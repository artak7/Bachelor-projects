install.packages("RTextTools")
install.packages("rtext")
install.packages("RTextTools")
install.packages('package_name', dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages('RTextTools', dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages("RTextTools")
install.packages("RTextTools")
bnhhhjjjbkkkk jnnnnnnnnnnkj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,yy          n,kykg
install.packages("RTextTools")
install.packages("C:/Users/admin.WIN-OSD1NEIENB0/Downloads/RTextTools_1.4.2.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/admin.WIN-OSD1NEIENB0/Downloads/RTextTools_1.4.2.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/admin.WIN-OSD1NEIENB0/Downloads/maxent_1.3.3.tar.gz", repos = NULL, type = "source")
install.packages("Rcpp")
# назначим рабочий директорий
setwd("C:/Users/admin.WIN-OSD1NEIENB0/Documents/Rprojects/task1")
# установим соединение с БД “WebData”
con<-odbcDriverConnect('driver={SQL Server}; server=VSHB-24-5-N5\\sqlexpress;database=WebData;trusted_connection=true')
library(RODBC)
# установим соединение с БД “WebData”
con<-odbcDriverConnect('driver={SQL Server}; server=VSHB-24-5-N5\\sqlexpress;database=WebData;trusted_connection=true')
con
# запрос - 3)	Сколько посетителей сделало заказы?
sqlQuery(con, "SELECT COUNT(DISTINCT wl.id_user) AS USER_NUMB FROM WebLog wl WHERE wl.action = 'order'");
library(arules)
# Напишем запрос, чтобы выбрать тех пользователей, у которых в корзине больше одной книги
# сохраним результат в переменную books
books = sqlQuery (con, "SELECT wl.id_user, wl.id_book FROM
(SELECT wl.id_user USER_ID, COUNT(wl.id_book) COUNT_BOOK
FROM WebLog wl
WHERE wl.id_book IS NOT NULL
GROUP BY wl.id_user) tmpTable, WebLog wl
WHERE COUNT_BOOK > 1
AND USER_ID = wl.id_user
AND wl.id_book IS NOT NULL
ORDER BY USER_ID");
tmp = books[1,1];
check = as.character(books[1,2]);
j = 0;
basket = data.frame();
for(i in 2:nrow(books))
{
if(books[i, 1] == tmp)
{
check = paste0(check, ",", as.character(books[i, 2]));
}
else
{
j = j + 1;
basket[j, 1] = tmp;
basket[j, 2] = check;
tmp = books[i, 1];
check = as.character(books[i, 2]);
}
}
j = j + 1;
basket[j, 1] = tmp;
basket[j, 2] = check;
# формируем файл, где каждая строка содержит сведения о корзине, номера книг разделены запятыми
write.table(basket[,2], "trans.txt", quote=FALSE, row.names=FALSE, col.names=FALSE);
# прочтем данные из файла
trans = read.transactions("trans.txt", sep= ',');
# используем априорный алгоритм
rules = apriori(data=trans, parameter=list(support=0.01,confidence=0.6))
# распечатаем ассоциативные правила
inspect(rules)
# назначим рабочий директорий
setwd("C:/Users/admin.WIN-OSD1NEIENB0/Documents/Rprojects/task2")
# прочитаем данные из файла в переменную dataFrame
# library(readxl)
# dataFrame = read_excel("mountains.xlsx")
# dataFrame = read.table("mountains.txt", sep = "\t", header = TRUE)
# dataFrame = dataFrame[,-4]
# write.table(dataFrame, "mountains.csv", quote=FALSE, row.names=FALSE, col.names=TRUE, sep=',')
dataFrame = read.table("mountains.csv", header=TRUE, sep = ',')
print(dataFrame)
# число записей
nrow(dataFrame)
library(ggplot2)
# построим карту мира
world_map <- map_data("world")
p <- ggplot() + coord_fixed() +
xlab("") + ylab("")
world <- p + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),
colour="light green", fill="light green")
world
# data.frame для хранения информации только о тех записях, у которых
# высота >= 8.5
text_data = data.frame();
count = 1;
for(i in 1:nrow(dataFrame))
{
if(dataFrame[i,3] >= 8.5)
{
text_data[count, 1] = dataFrame[i, 9];
text_data[count, 2] = dataFrame[i, 8];
text_data[count, 3] = dataFrame[i, 2];
count = count+1;
}
}
text_data
# наносим на карту горы
map_data <-
world +
geom_point(data=dataFrame,
aes(x=dataFrame$Longitude, y=dataFrame$Latitude, size=dataFrame$Height.m, fill=dataFrame$Height.m), colour="red",
pch=21, alpha=I(0.7)) +
scale_fill_gradient(low = "yellow", high = "red") +
labs(fill = "Height") +
labs(size = "Height") +
geom_text(aes(x=text_data$V1, y=text_data$V2, label=text_data$V3),
hjust = 0.25,
nudge_x = 0.05,
size=2.3
)
map_data
