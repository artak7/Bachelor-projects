k1 = k1 + 1
print(flag[i, 7], ' ', 1)
write.table(flag[k1,], "flag1.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag1[, k1] = flag[, i]
}
if (flag[i, 7] == 2)
{
k2 = k2 + 1
print(flag[i, 7], ' ', 2)
write.table(flag[k2, ], "flag2.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag2[, k2] = flag[, i]
}
}
print(flag[i, 7], ' 2')
for (i in 1:n)
{
if (flag[i, 7] < 2)
{
k1 = k1 + 1
print(flag[i, 7], ' 1')
write.table(flag[k1,], "flag1.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag1[, k1] = flag[, i]
}
if (flag[i, 7] == 2)
{
k2 = k2 + 1
print(flag[i, 7], ' 2')
write.table(flag[k2, ], "flag2.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag2[, k2] = flag[, i]
}
}
print(flag[i, 7]+' 2')
print(flag[i, 7])
print(' 2')
for (i in 1:n)
{
if (flag[i, 7] < 2)
{
k1 = k1 + 1
print(flag[i, 1], ' 1')
write.table(flag[k1,], "flag1.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag1[, k1] = flag[, i]
}
if (flag[i, 7] == 2)
{
k2 = k2 + 1
print(flag[i, 1])
print(' 2')
write.table(flag[k2, ], "flag2.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag2[, k2] = flag[, i]
}
}
for (i in 1:n)
{
if (flag[i, 7] < 2)
{
k1 = k1 + 1
print(flag[i, 1])
print(1)
write.table(flag[k1,], "flag1.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag1[, k1] = flag[, i]
}
if (flag[i, 7] == 2)
{
k2 = k2 + 1
print(flag[i, 1])
print(2)
write.table(flag[k2, ], "flag2.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag2[, k2] = flag[, i]
}
}
setwd("C://Users/pc/Documents/Магистратура/2 семестр/R/task8 DA")
getwd()
#очищаем рабочее пространство
rm (list=ls())
flag <- read.csv("flagdata.txt", sep=",", head=FALSE)
n = length(flag[,1])
n
k1 = 0
k2 = 0
for (i in 1:n)
{
if (flag[i, 7] < 2)
{
k1 = k1 + 1
print(flag[i, 1])
print(1)
write.table(flag[i,], "flag1.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag1[, k1] = flag[, i]
}
if (flag[i, 7] == 2)
{
k2 = k2 + 1
print(flag[i, 1])
print(2)
write.table(flag[i, ], "flag2.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag2[, k2] = flag[, i]
}
}
# flag1
# flag2
k1
k2
setwd("C://Users/pc/Documents/Магистратура/2 семестр/R/task8 DA")
getwd()
#очищаем рабочее пространство
rm (list=ls())
flag <- read.csv("flagdata.txt", sep=",", head=FALSE)
n = length(flag[,1])
n
setwd("C://Users/pc/Documents/Магистратура/2 семестр/R/task8 DA")
getwd()
#очищаем рабочее пространство
rm (list=ls())
flag <- read.csv("flagdata.txt", sep=",", head=FALSE)
n = length(flag[,1])
n
k1 = 0
k2 = 0
write("", "flag1.txt", append = FALSE)
write("", "flag2.txt", append = FALSE)
for (i in 1:n)
{
if (flag[i, 7] < 2)
{
k1 = k1 + 1
print(flag[i, 1])
print(1)
write.table(flag[i,], "flag1.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag1[, k1] = flag[, i]
}
if (flag[i, 7] == 2)
{
k2 = k2 + 1
print(flag[i, 1])
print(2)
write.table(flag[i, ], "flag2.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# flag2[, k2] = flag[, i]
}
}
# flag1
# flag2
k1
k2
#очищаем рабочее пространство
rm (list=ls())
# Назначим рабочий директорий
setwd("C://Users/pc/Documents/Магистратура/2 семестр/R/task8 DA")
getwd()
#очищаем рабочее пространство
rm (list=ls())
# Прочтём данные о странах, принадлежащих 1 классу (христиане)
country1<- read.csv("country1.txt", sep=",", head=FALSE)
# Выделим фактор население
country1 = country1[,5]
country1
setwd("C://Users/pc/Documents/Магистратура/2 семестр/R/task8 DA")
getwd()
#очищаем рабочее пространство
rm (list=ls())
flag <- read.csv("flagdata.txt", sep=",", head=FALSE)
n = length(flag[,1])
n
k1 = 0
k2 = 0
write("", "country1.txt", append = FALSE)
write("", "country2.txt", append = FALSE)
for (i in 1:n)
{
if (flag[i, 7] == 0)
flag[i, 7] = 1
if (flag[i, 7] < 2)
{
k1 = k1 + 1
print(flag[i, 1])
print(1)
write.table(flag[i,], "country1.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# country1[, k1] = flag[, i]
}
if (flag[i, 7] == 2)
{
k2 = k2 + 1
print(flag[i, 1])
print(2)
write.table(flag[i, ], "country2.txt", append = TRUE, quote=FALSE, sep=',', row.names = FALSE, col.names = FALSE)
# country2[, k2] = flag[, i]
}
}
# country1
# country2
k1
k2
# Назначим рабочий директорий
setwd("C://Users/pc/Documents/Магистратура/2 семестр/R/task8 DA")
getwd()
#очищаем рабочее пространство
rm (list=ls())
# Прочтём данные о странах, принадлежащих 1 классу (христиане)
country1<- read.csv("country1.txt", sep=",", head=FALSE)
# Выделим фактор население
country1 = country1[,5]
country1
# Прочтём данные о странах, принадлежащих 2 классу (мусульмане)
country2<- read.csv("country2.txt", sep=",", head=FALSE)
# Выделим фактор население
country2 = country2[,5]
country2
# Проверим гипотезу о нормальности распределения выборки стран первого класса (христиане)
shapiro.test(country1)
# Проверим гипотезу о нормальности распределения выборки стран второго класса (мусульмане)
shapiro.test(coutnry2)
# Проверим гипотезу о нормальности распределения выборки стран второго класса (мусульмане)
shapiro.test(country2)
# Проверим гипотезу о равенстве дисперсий
var.test(coutnry1, coutnry2)
# Проверим гипотезу о равенстве дисперсий
var.test(country1, country2)
# Найдём объемы выборок
nA = length(country1)
nA
nF = length(country2)
nF
n = nA + nF
n
# Априорные вероятности:
Pk = c(nA,nF)/n
Pk
# Найдём оценки параметров
omuA=mean(country1)
"Среднее выборочное значение населения стран для стран первого класса(христиане) = "
omuA
omuF=mean(country2)
"Среднее выборочное значение населения стран для стран второго класса(мусульмане) = "
omuF
osigA=sd(country1)
"Среднее квадратическое отклонение населения стран для стран первого класса(христиане) = "
osigA
osigF=sd(country2)
"Среднее квадратическое отклонение населения стран для стран второго класса(мусульмане) = "
osigF
osig = (osigA + osigF)/2
osig
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(12, 15.5), ylim=c(0, 1))
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(0, 231), ylim=c(0, 1))
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(0, 50), ylim=c(0, 1))
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(0, 10), ylim=c(0, 1))
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(0, 231), ylim=c(0, 1))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(0, 50), ylim=c(0, 1))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(wine_second,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(0, 250), ylim=c(0, 1))
hist(country2,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(0, 250), ylim=c(0, 1))
curve(dnorm(x,omuF,osigF),col="black",lwd=3,add=TRUE)
hist(country2,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(0, 20), ylim=c(0, 1))
curve(dnorm(x,omuF,osigF),col="black",lwd=3,add=TRUE)
# Совместим графики плотности на одном рисунке
# Для этого определим диапазон значений x, на котором будем делать построение
a=min(min(wine_first),min(wine_second))
b=max(max(wine_first),max(wine_second))
# Совместим графики плотности на одном рисунке
# Для этого определим диапазон значений x, на котором будем делать построение
a=min(min(country1),min(country2))
b=max(max(country1),max(country2))
curve(dnorm(x,omuA,osig),a,b,col="darkgreen",lwd=3)
curve(dnorm(x,omuF,osig),a,b,col="red",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(0, 50), ylim=c(0, 1))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country2,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(0, 20), ylim=c(0, 1))
curve(dnorm(x,omuF,osigF),col="black",lwd=3,add=TRUE)
curve(dnorm(x,omuF,osigF),col="black",lwd=3,add=TRUE)
# Совместим графики плотности на одном рисунке
# Для этого определим диапазон значений x, на котором будем делать построение
a=min(min(country1),min(country2))
b=max(max(country1),max(country2))
curve(dnorm(x,omuA,osig),a,b,col="darkgreen",lwd=3)
curve(dnorm(x,omuF,osig),a,b,col="red",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(0, 300), ylim=c(0, 1))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country2,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(0, 300), ylim=c(0, 1))
curve(dnorm(x,omuF,osigF),col="black",lwd=3,add=TRUE)
# Совместим графики плотности на одном рисунке
# Для этого определим диапазон значений x, на котором будем делать построение
a=min(min(country1),min(country2))
b=max(max(country1),max(country2))
curve(dnorm(x,omuA,osig),a,b,col="darkgreen",lwd=3)
curve(dnorm(x,omuF,osig),a,b,col="red",lwd=3,add=TRUE)
# Напишем функцию для определения класса(религии) страны по населению страны
fdiscr = function (x)
{
vZ = log(Pk[1]) + x*omuA/(osig^2) - (omuA^2)/(2*osig^2);
vT = log(Pk[2]) + x*omuF/(osig^2) - (omuF^2)/(2*osig^2);
class <- ifelse(vZ > vT,"Класс : 1","Класс : 2");
return (class);
}
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(0, 300), ylim=c(0, 0.02))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country2,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(0, 300), ylim=c(0, 0.02))
hist(country2,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(0, 300), ylim=c(0, 0.12))
curve(dnorm(x,omuF,osigF),col="black",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(0, 200), ylim=c(0, 0.02))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(-50, 100), ylim=c(0, 0.02))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country2,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(0, 300), ylim=c(0, 0.12))
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(-50, 100), ylim=c(0, 0.02))
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(-100, 100), ylim=c(0, 0.02))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(-50, 50), ylim=c(0, 0.02))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(-100, 100), ylim=c(0, 0.02))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(-50, 100), ylim=c(0, 0.02))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(-50, 100), ylim=c(0, 0.05))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(-50, 100), ylim=c(0, 0.01))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(-50, 100), ylim=c(0, 0.015))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country1,col="green",freq=FALSE, main="Гистограмма
населения стран первого класса(христиане)", xlim=c(-50, 100), ylim=c(0, 0.018))
curve(dnorm(x,omuA,osigA),col="black",lwd=3,add=TRUE)
hist(country2,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(0, 300), ylim=c(0, 0.12))
hist(country2,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(-100, 150), ylim=c(0, 0.05))
curve(dnorm(x,omuF,osigF),col="black",lwd=3,add=TRUE)
hist(country2,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(-100, 150), ylim=c(0, 0.02))
curve(dnorm(x,omuF,osigF),col="black",lwd=3,add=TRUE)
hist(country2,col="red",freq=FALSE, main="Гистограмма
населения стран второго класса(мусульмане)", xlim=c(-50, 150), ylim=c(0, 0.02))
curve(dnorm(x,omuF,osigF),col="black",lwd=3,add=TRUE)
# Совместим графики плотности на одном рисунке
# Для этого определим диапазон значений x, на котором будем делать построение
a=min(min(country1),min(country2))
b=max(max(country1),max(country2))
curve(dnorm(x,omuA,osig),a,b,col="darkgreen",lwd=3)
curve(dnorm(x,omuF,osig),a,b,col="red",lwd=3,add=TRUE)
# Напишем функцию для определения класса(религии) страны по населению страны
fdiscr = function (x)
{
vZ = log(Pk[1]) + x*omuA/(osig^2) - (omuA^2)/(2*osig^2);
vT = log(Pk[2]) + x*omuF/(osig^2) - (omuF^2)/(2*osig^2);
class <- ifelse(vZ > vT,"Класс : 1","Класс : 2");
return (class);
}
# Сделаем прогноз значений переменной отклика для нескольких
# образцов вин из обучающей выборки
x = 13.64
d=fdiscr(x)
x
d
# Сделаем прогноз значений переменной отклика для нескольких
# стран из обучающей выборки
x = 119 # Brazil
d=fdiscr(x)
x
d
#############
x = 157 # Indonesia
d=fdiscr(x)
x
d
############
x = 2
d=fdiscr(x)
x
d
###########
x = 3
d=fdiscr(x)
x
d
###########
x = 5
d=fdiscr(x)
x
d
###########
x = 20
d=fdiscr(x)
x
d
###########
x = 90
d=fdiscr(x)
x
d
###########
x = 9
d=fdiscr(x)
x
d
###########
x = 1
d=fdiscr(x)
x
d
###########
x = 10
d=fdiscr(x)
x
d
###########
x = 15
d=fdiscr(x)
x
d
###########
x = 30
d=fdiscr(x)
x
d
###########
x = 40
d=fdiscr(x)
x
d
###########
x = 35
d=fdiscr(x)
x
d
###########
x = 60
d=fdiscr(x)
x
d
###########
x = 70
d=fdiscr(x)
x
d
###########
x = 47
d=fdiscr(x)
x
d
###########
x = 100
d=fdiscr(x)
x
d
###########
x = 1150
d=fdiscr(x)
x
d
###########
x = 150
d=fdiscr(x)
x
d
###########
x = 140
d=fdiscr(x)
x
d
###########
x = 120
d=fdiscr(x)
x
d
###########
x = 125
d=fdiscr(x)
x
d
# Сделаем прогноз значений переменной отклика для нескольких
# стран из обучающей выборки
x = 119 # Brazil
d=fdiscr(x)
x
d
#############
x = 157 # Indonesia
d=fdiscr(x)
x
d
############
x = 2 # Jamaica
d=fdiscr(x)
x
d
